#pragma once

#include <QObject>
#include <QDialog>
#include <QString>
#include <QMap>
#include <QMessageBox>

#include <exception>

#include "../../utils.h"
#include "../../bridge.h"
#include "../../wrapper_classes.h"
#include "ui_file_import.h"


const static QMap<QString, int> mapImportFormat({
    {QString("Ascii"), 0},
    {QString("Rotated Ascii"), 1},
    {QString("DIF"), 2},
    {QString("DIF Belgostat"), 3},
    {QString("NIS"), 4},
    {QString("GEM (chronos)"), 5},
    {QString("PRN-AREMOS"), 6},
    {QString("TXT-BELGOSTAT"), 7},
    });


/* NOTE FOR THE DEVELOPERS:
 * All Menu Dialog classes MUST
 * 1. inherit from MixinSettings,
 * 2. use the extractAndVerify() method to extract input data from fields,
 * 3. call the Q_OBJECT macro at the beginning of the class to allow slots and signals (see documentation of Qt),
 * 4. have a private pointer *ui to the associated class generated by the Qt Designer.
 */
class FileImportDialog : public MixinSettings
{
    Q_OBJECT

    Ui::file_import* ui;

    WrapperComboBox* input_type;
    WrapperComboBox* input_format;
    WrapperFileChooser* input_file;
    WrapperFileChooser* rule_file;

    WrapperFileChooser* save_file;
    WrapperSampleEdit* sample_from;
    WrapperSampleEdit* sample_to;
    WrapperComboBox* language;

    WrapperFileChooser* debug_file;

public:
	FileImportDialog(QSettings& settings, QWidget* parent = nullptr, Qt::WindowFlags f = Qt::WindowFlags());
	~FileImportDialog();

public slots:
	void import();
};
