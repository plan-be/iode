#pragma once

#include <QObject>
#include <QDialog>
#include <QString>
#include <QMessageBox>

#include <string>
#include <exception>

#include "../../utils.h"
#include "../../bridge.h"
#include "../../wrapper_classes.h"
#include "ui_file_export.h"


const static QMap<QString, int> exportFormatAsInt({
	{QString("CSV"), 0},
	{QString("DIF"), 1},
	{QString("WKS"), 2},
	{QString("TSP"), 3},
	{QString("Reverse CSV"), 4}
	});


/* NOTE FOR THE DEVELOPERS:
 * All Menu Dialog classes MUST
 * 1. inherit from MixinSettings,
 * 2. use the extractAndVerify() method to extract input data from fields,
 * 3. call the Q_OBJECT macro at the beginning of the class to allow slots and signals (see documentation of Qt),
 * 4. have a private pointer *ui to the associated class generated by the Qt Designer.
 */
class FileExportDialog : public MixinSettings
{
	Q_OBJECT

public:
	FileExportDialog(QSettings& settings, QWidget* parent = nullptr, Qt::WindowFlags f = Qt::WindowFlags());
	~FileExportDialog();

private:
	Ui::file_export* ui;

	WrapperFileChooser* variable_file;
	WrapperFileChooser* comment_file;
	WrapperFileChooser* rule_file;

	WrapperSampleEdit* sample_from;
	WrapperSampleEdit* sample_to;
	WrapperComboBox* format;
	WrapperFileChooser* save_file;
	WrapperQLineEdit* csvNaN;
	WrapperQLineEdit* separator;
	WrapperFileChooser* debug_file;

public slots:
	void save();
};
