# Import needed modules
try:
    from setuptools import setup
    from setuptools import Extension
except ImportError:
    from distutils.core import setup
    from distutils.extension import Extension

import numpy as np

# Visual Studio dir structure
build_dir = '${CMAKE_BINARY_DIR}'
iode_incl_dir = '${CMAKE_SOURCE_DIR}/api'
scr4_incl_dir = '${CMAKE_SOURCE_DIR}/scr4'
iode_lib_dir = f'{build_dir}/api'
iode_obj_dir = f'{build_dir}/api/CMakeFiles/iode_c_api.dir'
scr4_lib_dir = f'{build_dir}/scr4'
scr4_obj_dir = f'{build_dir}/scr4/CMakeFiles/iode_scr4.dir'
#extra_link_args_ = '-debug'

# Cythonize iode.pyx, compile generated file (iode.c) and link with appropriated libs
iodemodule = Extension('iode',
    include_dirs = [np.get_include(), iode_incl_dir, scr4_incl_dir],
    library_dirs = [scr4_lib_dir, scr4_obj_dir, iode_lib_dir, iode_obj_dir],
    libraries = ['iode_c_api', 'iode_scr4', 'odbc32', 'odbccp32', 'ws2_32', 'gdi32', 
                 'user32', 'advapi32', 'shell32', 'comdlg32', 'comctl32', 'Winspool', 
                 'legacy_stdio_definitions'],
	extra_compile_args=["-Zi", "/Od", "/DVC", "/DSCRPROTO", "/DREALD"],				
    sources = ["iode.pyx", "s_iode.c"],
    depends = [ "iode.pxy", "s_iode.c", "iode.pxi", 
                "pyiode_cdef.pyx", "pyiode_data.pyx", "pyiode_estim.pyx", 
                "pyiode_exec.pyx",  "pyiode_larray.pyx", "pyiode_lec.pyx",
                "pyiode_model.pyx", "pyiode_objs.pyx", "pyiode_print.pyx", 
                "pyiode_reports.pyx", "pyiode_sample.pyx", "pyiode_util.pyx",  
                "pyiode_ws.pyx"],
    # extra_link_args = [extra_link_args_],
    define_macros=[("NPY_NO_DEPRECATED_API", "NPY_1_7_API_VERSION")]
)           

# Create the .pyd file (?)
setup(
    name = 'iode',
    ext_modules = [iodemodule]
)
