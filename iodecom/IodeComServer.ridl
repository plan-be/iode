// ************************************************************************ //
// WARNING
// -------
// This file is generated by the Type Library importer or Type Libary Editor.
// Barring syntax errors, the Editor will parse modifications made to the file.
// However, when applying changes via the Editor this file will be regenerated
// and comments or formatting changes will be lost.
// ************************************************************************ //
// File generated on 14/01/2016 16:18:44 (- $Rev: 12980 $, 178120615).

[
  uuid(093A7EC0-D7E8-11D4-9BB9-0001025007D6),
  version(1.1),
  helpstring("Iode Com Library")

]
library IodeCom
{

  importlib("stdole2.tlb");

  interface ICCIode;
  coclass CCIode;


  [
    uuid(093A7EC1-D7E8-11D4-9BB9-0001025007D6),
    version(1.0),
    helpstring("Dispatch interface for CCIode Object"),
    dual,
    oleautomation
  ]
  interface ICCIode: IDispatch
  {
    [id(0x00000001)]
    HRESULT _stdcall MWsLoad([in] BSTR FileName, [in] int Type, [out, retval] int* Status);
    [id(0x00000004)]
    HRESULT _stdcall MExecute([in] BSTR Cmd, [out, retval] int* Status);
    [id(0x00000002)]
    HRESULT _stdcall MReport([in] BSTR FileName, [out, retval] int* Status);
    [id(0x00000003)]
    HRESULT _stdcall MGetObject([in] BSTR Name, [in] int Type, [out, retval] BSTR* Object);
    [id(0x00000005)]
    HRESULT _stdcall MGetVar([in] BSTR Name, [in] int T, [out, retval] VARIANT* Value);
    [id(0x00000006)]
    HRESULT _stdcall MStatus([in] int Type, [out] long* Nb, [out, retval] BSTR* Name);
    [id(0x00000008)]
    HRESULT _stdcall MGetMaxt([out, retval] long* Value);
    [id(0x00000009)]
    HRESULT _stdcall MGetFreq([out, retval] long* Value);
    [id(0x0000000A)]
    HRESULT _stdcall MGetBegin([out] long* Year, [out] long* Sub, [out, retval] long* Freq);
    [id(0x0000000B)]
    HRESULT _stdcall MGetEnd([out] long* Year, [out] long* Sub, [out, retval] long* Freq);
    [id(0x0000000C)]
    HRESULT _stdcall MGetBeginYear([out, retval] long* Value);
    [id(0x0000000D)]
    HRESULT _stdcall MGetBeginSub([out, retval] long* Value);
    [id(0x0000000F)]
    HRESULT _stdcall MVector([in] BSTR Name, [in, optional, defaultvalue(0)] long Offset, [in, optional, defaultvalue(0)] long Length, [out, retval] SAFEARRAY(double) * Value);
    [propget, id(0x00000010)]
    HRESULT _stdcall PSample([out, retval] SAFEARRAY(BSTR) * Value);
    [id(0x0000000E)]
    HRESULT _stdcall MContents([in] int Type, [in] BSTR Pattern, [out, retval] SAFEARRAY(BSTR) * List);
    [id(0x00000013)]
    HRESULT _stdcall MTest([in] BSTR Name, [in] int Formatted, [in] int ToAnsi, [in, optional, defaultvalue(0)] long Offset, [out, retval] SAFEARRAY(VARIANT) * Res);
    [id(0x00000011)]
    HRESULT _stdcall MGetTbl([in] BSTR Name, [in] BSTR GSmpl, [in, optional, defaultvalue(0)] long Formatted, [out, retval] SAFEARRAY(VARIANT) * Value);
    [propget, id(0x00000012)]
    HRESULT _stdcall PDebug([out, retval] int* Value);
    [propput, id(0x00000012)]
    HRESULT _stdcall PDebug([in] int Value);
    [id(0x00000007)]
    HRESULT _stdcall MMatrix([in] BSTR List, [in] int WithNames, [in, optional, defaultvalue(0)] long Offset, [in, optional, defaultvalue(0)] long Length, [out, retval] SAFEARRAY(VARIANT) * Value);
    [id(0x00000014)]
    HRESULT _stdcall MOffset([in] BSTR Period, [out, retval] int* Offset);
    [propget, id(0x00000015)]
    HRESULT _stdcall POEMToAnsi([out, retval] int* Value);
    [propput, id(0x00000015)]
    HRESULT _stdcall POEMToAnsi([in] int Value);
    [propget, id(0x00000016)]
    HRESULT _stdcall PError([out, retval] BSTR* Value);
    [propget, id(0x00000017)]
    HRESULT _stdcall PCurrentDir([out, retval] BSTR* Value);
    [propput, id(0x00000017)]
    HRESULT _stdcall PCurrentDir([in] BSTR Value);
    [id(0x00000018)]
    HRESULT _stdcall MUpdateVars([in] long Offset, [in] SAFEARRAY(VARIANT) Value, [out, retval] long* Res);
    [id(0x00000019)]
    HRESULT _stdcall MUpdateObj([in] long ObjType, [in] SAFEARRAY(VARIANT) Value, [out, retval] long* Res);
    [id(0x0000001A)]
    HRESULT _stdcall MMatrixPattern([in] BSTR Pattern, [in] BSTR X, [in] BSTR Y, [in] BSTR Year, [out, retval] SAFEARRAY(VARIANT) * Value);
    [propget, id(0x000000C9)]
    HRESULT _stdcall PVersion([out, retval] BSTR* Value);
  };

  [
    uuid(093A7EC3-D7E8-11D4-9BB9-0001025007D6),
    version(1.0),
    helpstring("CCIode Object")
  ]
  coclass CCIode
  {
    [default] interface ICCIode;
  };

};
