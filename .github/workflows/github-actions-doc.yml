name: Build documentation

on: 
  # line below makes jobs defined in this script (workflow) reusable
  # https://docs.github.com/en/actions/using-workflows/reusing-workflows
  workflow_call

jobs:
    build_doc:
        name: Build user documentation
        runs-on: ubuntu-latest
        env:
          build-config: linux-release
        # because of miniconda -> https://github.com/marketplace/actions/setup-miniconda#important
        defaults:
          run:
            shell: bash -el {0}
        steps:
          - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
          - run: echo "This job is now running on a ${{ runner.os }} server"
          - run: echo "The name of the repository is ${{ github.repository }}."
          - run: echo "The target branch of the current pull request is ${{ github.base_ref }}."
          - run: echo "The source branch of the current pull request is ${{ github.head_ref }}."
          - run: echo "The workspace directory is ${{ github.workspace }}."
          - name: Checkout repository code
            uses: actions/checkout@v2
          - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
          - name: Install dependencies on linux
            run: |
              sudo apt update
              sudo apt install ninja-build texlive 
          - name: Print preset config
            run: echo "${{ env.build-config }}"
          - name: Configure CMake
            # cmake --preset <configurePreset> where <configurePreset> is the name of the active Configure Preset.
            # see CMakePresets.json file
            # for more details about cmake preset:
            #   - https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html
            #   - https://docs.microsoft.com/en-us/cpp/build/cmake-presets-vs?view=msvc-170
            run: | 
              cmake --version
              cmake --preset ${{ env.build-config }}
          - name: Build Keyboard Shortcuts PDF
            run: cmake --build --verbose --preset ${{ env.build-config }} --target keyboard_shortcuts
          - name: Check files to upload
            run: ls ${{ github.workspace }}/doc/build
          - name: Upload documentation files
            if: ${{ success() }}
            uses: actions/upload-artifact@v4
            with:
              name: iode-doc
              path: ${{ github.workspace }}/doc/build
              if-no-files-found: error    # 'warn' or 'ignore' are also available, defaults to `warn`
