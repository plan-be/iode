name: GitHub Actions IODE

# Triggers the workflow on pull request events
on: pull_request

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-windows-debug:
    name: Running tests on Windows

    # The CMake configure and build commands are platform agnostic and should 'ideally' work equally well on Windows or Linux.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    # List of softwares installed on windows-latest: https://github.com/actions/virtual-environments/blob/main/images/win/Windows2019-Readme.md
    runs-on: windows-latest

    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server"
      - run: echo "The name of the current branch is ${{ github.ref }} and the repository is ${{ github.repository }}."
      - name: Checkout repository code
        uses: actions/checkout@v2
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: Install dependencies on windows
        run: |
          choco install ninja
          ninja --version
          cmake --version
      - name: Add cl.exe to PATH
        # See https://github.com/marketplace/actions/enable-developer-command-prompt
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
      - name: Configure CMake
        # cmake --preset <configurePreset> where <configurePreset> is the name of the active Configure Preset.
        # see CMakePresets.json file
        # for more details about cmake preset:
        #   - https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html
        #   - https://docs.microsoft.com/en-us/cpp/build/cmake-presets-vs?view=msvc-170
        run: cmake --preset windows-x64-debug
      - name: Build SCR4
        # cmake --build --preset <buildPreset> where <buildPreset> is the name of the active Build Preset.
        # see CMakePresets.json file
        run: cmake --build --preset windows-x64-debug --target scr4iode 
      - name: Build C IODE API
        run: cmake --build --preset windows-x64-debug --target iodeapi 
      - name: Build C++ IODE API
        run: cmake --build --preset windows-x64-debug --target iodecppapi 
      - name: Build Tests
        run: cmake --build --preset windows-x64-debug --target test_cpp_api
      - run: echo "The workflow is now ready to test your code on the runner."
      - name: Run Tests
        run: ctest --preset windows-x64-debug
      - run: echo "This job's status is ${{ job.status }}."
