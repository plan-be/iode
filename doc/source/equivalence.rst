.. _start_equivalence:

.. currentmodule:: iode


################################################
Equivalence IODE Report Commands and IODE Python
################################################

*********************************************************
Equivalence Between IODE Report Functions and IODE Python
*********************************************************

   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | IODE Report Functions                | Python Equivalent                                                                                                                   |            
   +======================================+=====================================================================================================================================+
   | ``@upper(txt)``                      | `txt.upper() <https://docs.python.org/3/library/stdtypes.html#str.upper>`_                                                          |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@lower(txt)``                      | `txt.lower() <https://docs.python.org/3/library/stdtypes.html#str.lower>`_                                                          |             
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@replace(txt, from, to)``          | `txt.replace(old, new) <https://docs.python.org/3/library/stdtypes.html#str.replace>`_                                              |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@fmt(val, fmt)``                   | See `printf-style String Formatting <https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting>`_              |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@take(n, txt)``                    | `txt[:n] <https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range>`_                                        |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@drop(n, txt)``                    | `txt[n:] <https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range>`_                                        |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@count(txt)``                      | `len(txt.split(',')) <https://docs.python.org/3/library/stdtypes.html#str.split>`_                                                  |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@index(n, list_txt)``              | `split_list(list_txt)[n-1] <https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range>`_                      |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@sqz(txt)``                        | `txt.replace(' ', '') <https://docs.python.org/3/library/stdtypes.html#str.replace>`_                                               |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@strip(txt)``                      | `txt.strip() <https://docs.python.org/3/library/stdtypes.html#str.strip>`_                                                          |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@ansi(txt)``                       | See `String Methods <https://docs.python.org/3/library/stdtypes.html#string-methods>`_                                              |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@equal(t1, t2)``                   | `t1 == t2` --> See `Python Comparisons <https://docs.python.org/3/library/stdtypes.html#comparisons>`_                              |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@void(t1, ...)``                   | No equivalence                                                                                                                      |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@vtake(n, list_txt)``              | `split_list(list_txt)[:n] <https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range>`_                       |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@vdrop(n, list_txt)``              | `split_list(list_txt)[n:] <https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range>`_                       |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@vcount(list_txt)``                | `len(split_list(list_txt)) <https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range>`_                      |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@fdelete(filepath)``               | `Path(filepath).unlink() <https://docs.python.org/3/library/pathlib.html#pathlib.Path.unlink>`_                                     |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@fappend(filepath, txt)``          | `with open(filepath, 'a') as f: f.write(txt) <https://docs.python.org/3/library/functions.html#open>`_                              |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@getdir()``                        | `os.getcwd() <https://docs.python.org/3/library/os.html#os.getcwd>`_                                                                |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@chdir(dirname)``                  | `os.chdir(dirname) <https://docs.python.org/3/library/os.html#os.chdir>`_ [#f1]_                                                    |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@mkdir(dirname)``                  | `os.mkdir(dirname) <https://docs.python.org/3/library/os.html#os.mkdir>`_ [#f1]_                                                    |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@rmdir(dirname)``                  | `os.rmdir(dirname) <https://docs.python.org/3/library/os.html#os.rmdir>`_ [#f1]_                                                    |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@date(format)``                    | `datetime.now().strftime("%d/%m/%Y") <https://docs.python.org/3/library/datetime.html#datetime.datetime.now>`_ [#f2]_               |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@time(format)``                    | `datetime.now().strftime("%H:%M:%S") <https://docs.python.org/3/library/datetime.html#datetime.datetime.now>`_ [#f2]_               |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@month(month, language)``          | `datetime.date(year, month, day).strftime("%B") <https://docs.python.org/3.9/library/datetime.html#strftime-and-strptime-behavior>`_|
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@ChronoReset()``                   | `start = time.time_ns() <https://docs.python.org/3/library/time.html#time.time_ns>`_ [#f3]_                                         |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@ChronoGet()``                     | `elapsed_time = time.time_ns() - start <https://docs.python.org/3/library/time.html#time.time_ns>`_ [#f3]_                          |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@cexpand(pattern)``                | ``comments.get_names(pattern)`` --> See :meth:`Database.get_names`                                                                  |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@eexpand(pattern)``                | ``equations.get_names(pattern)`` --> See :meth:`Database.get_names`                                                                 |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@iexpand(pattern)``                | ``identities.get_names(pattern)`` --> See :meth:`Database.get_names`                                                                |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@lexpand(pattern)``                | ``lists.get_names(pattern)`` --> See :meth:`Database.get_names`                                                                     |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@sexpand(pattern)``                | ``scalars.get_names(pattern)`` --> See :meth:`Database.get_names`                                                                   |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@texpand(pattern)``                | ``tables.get_names(pattern)`` --> See :meth:`Database.get_names`                                                                    |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@vexpand(pattern)``                | ``variables.get_names(pattern)`` --> See :meth:`Database.get_names`                                                                 |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@vliste(eq_name)``                 | ``equations[eq_name].get_variables_list()`` --> See :meth:`Equation.get_variables_list`                                             |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@sliste(eq_name)``                 | ``equations[eq_name].get_coefficients_list()`` --> See :meth:`Equation.get_coefficients_list`                                       |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@ttitle(tablename)``               | Not Yet Implemented                                                                                                                 |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@srelax(scl_name)``                | `scalars[scl_name].relax` --> See :meth:`Scalar.relax`                                                                              |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@sstderr(scl_name)``               | `scalars[scl_name].std` --> See :meth:`Scalar.std`                                                                                  |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@cvalue(cmt_names)``               | `[comments[name] for name in cmt_names]` --> See :meth:`Database.__getitem__`                                                       |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@vvalue(var_names)``               | `[variables[name] for name in var_names]` --> See :meth:`Database.__getitem__`                                                      |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@sample()``                        | `variables.sample` --> See :meth:`Variables.sample`                                                                                 |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@evalue(eq_name)``                 | `equations[eq_name].lec` --> See :meth:`Equation.lec`                                                                               |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@eqsample(eq_name)``               | `equations[eq_name].sample` --> See :meth:`Equation.sample`                                                                         |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@eqsamplefrom(eq_name)``           | `equations[eq_name].sample.start` --> See :meth:`Equation.sample` and :meth:`Sample.start`                                          |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@eqsampleto(eq_name)``             | `equations[eq_name].sample.end` --> See :meth:`Equation.sample` adnd :meth:`Sample.end`                                             |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@eqlhs(eq_name)``                  | ``lhs, rhs = equations[eq_name].split_equation()`` --> See :meth:`Equation.split_equation`                                          |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@eqrhs(eq_name)``                  | ``lhs, rhs = equations[eq_name].split_equation()`` --> See :meth:`Equation.split_equation`                                          |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SqlOpen``                         | Not Implemented                                                                                                                     |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SqlQuery``                        | Not Implemented                                                                                                                     |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SqlNext``                         | Not Implemented                                                                                                                     |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SqlField``                        | Not Implemented                                                                                                                     |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SqlRecord``                       | Not Implemented                                                                                                                     |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SqlClose``                        | Not Implemented                                                                                                                     |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SimEps()``                        | To Be Rewritten                                                                                                                     |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SimRelax()``                      | To Be Rewritten                                                                                                                     |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SimMaxit()``                      | To Be Rewritten                                                                                                                     |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SimNiter(period)``                | To Be Rewritten                                                                                                                     |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SimNorm(period)``                 | To Be Rewritten                                                                                                                     |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+

.. [#f1] Assuming module ``os`` is imported.
.. [#f2] Assuming module ``datetime`` is imported.
.. [#f3] Assuming module ``time`` is imported.


********************************************************
Equivalence Between IODE Report Commands and IODE Python
********************************************************

==========
Workspaces
==========

Below *workspace* must be replaced by either:
  - comments
  - equations
  - identities
  - lists
  - scalars
  - tables
  - variables

    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | IODE Report Commands | Python Equivalent                                                                                                   |
    +======================+=====================================================================================================================+
    | ``WsLoad``           | ``workspace.load(filepath)`` --> See :meth:`Database.load`                                                          |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsCopy``           | ``workspace.copy_into(filepath)`` --> See :meth:`Database.copy_into`                                                |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsMerge``          | ``workspace.merge_from(filepath)`` --> See :meth:`Database.merge_from`                                              |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsClear``          | ``workspace.clear()`` --> See :meth:`Database.clear`                                                                |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsClearAll``       | Not Implemented                                                                                                     |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsDescr``          | ``workspace.description`` --> See :meth:`Database.description`                                                      |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsSave``           | ``workspace.save(filepath)`` --> See :meth:`Database.save`                                                          |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsSaveCmp``        | Not Yet Implemented                                                                                                 |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsSample``         | ``variables.sample = "1990Y1:2050Y1"`` --> See :meth:`Variables.sample`                                             |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsExtrapolate``    | ``variables.extrapolate(method, from_, to_, variables_list)`` --> See :meth:`Variables.extrapolate`                 |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsLtohStock``      | ``variables.low_to_high(LTOH_STOCK, method, filepath, var_list)`` --> See :meth:`Variables.low_to_high`             |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsLtohFlow``       | ``variables.low_to_high(LTOH_FLOW, method, filepath, var_list)`` --> See :meth:`Variables.low_to_high`              |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsHtolSum``        | ``variables.high_to_low(HTOL_SUM, filepath, var_list)`` --> See :meth:`Variables.high_to_low`                       |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsHtolMean``       | ``variables.high_to_low(HTOL_MEAN, filepath, var_list)`` --> See :meth:`Variables.high_to_low`                      |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsHtolLast``       | ``variables.high_to_low(HTOL_LAST, filepath, var_list)`` --> See :meth:`Variables.high_to_low`                      |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsSeasonAdj``      | ``variables.seasonal_adjustment(input_file, eps_test, series)`` --> See :meth:`Variables.seasonal_adjustment`       |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsSeasAdj``        | ``variables.seasonal_adjustment(input_file, eps_test, series)`` --> See :meth:`Variables.seasonal_adjustment`       |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsTrend``          | ``variables.trend_correction(input_file, lambda_, series, log=True)`` --> See :meth:`Variables.trend_correction`    |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsTrendStd``       | ``variables.trend_correction(input_file, lambda_, series, log=False)`` --> See :meth:`Variables.trend_correction`   |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsImport``         | ``workspace.load(filepath)`` --> See :meth:`Database.load`                                                          |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsExport``         | ``workspace.save(filepath)`` --> See :meth:`Database.save`                                                          |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsImportEviews``   | Not Implemented                                                                                                     |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``CsvSave``          | ``df = workspace.to_frame()`` --> See :meth:`iode.Variables.to_frame`                                               |
    |                      | `df.to_csv(filepath, ...) <https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_csv.html>`_  [#f4]_     |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``CsvDigits``        | ``df = workspace.to_frame()`` --> See :meth:`iode.Variables.to_frame`                                               |
    |                      | `df.to_csv(filepath, ...) <https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_csv.html>`_  [#f4]_     |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``CsvSep``           | ``df = workspace.to_frame()`` --> See :meth:`iode.Variables.to_frame`                                               |
    |                      | `ndf.to_csv(filepath, ...) <https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_csv.html>`_  [#f4]_    |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``CsvDec``           | ``df = workspace.to_frame()`` --> See :meth:`iode.Variables.to_frame`                                               |
    |                      | `ndf.to_csv(filepath, ...) <https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_csv.html>`_  [#f4]_    |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``CsvNaN``           | ``df = workspace.to_frame()`` --> See :meth:`iode.Variables.to_frame`                                               |
    |                      | `df.to_csv(filepath, ...) <https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_csv.html>`_  [#f4]_     |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``CsvAxes``          | ``df = workspace.to_frame()`` --> See :meth:`iode.Variables.to_frame`                                               |
    |                      | `df.to_csv(filepath, ...) <https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_csv.html>`_  [#f4]_     |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+

.. [#f4] Assuming library ``pandas`` is installed.


====
Data
====

Below *workspace* must be replaced by either:
  - comments
  - equations
  - identities
  - lists
  - scalars
  - tables
  - variables


    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | IODE Report Commands | Python Equivalent                                                                                                              |
    +======================+================================================================================================================================+
    | ``datacreate``       | ``if name not in workspace:  `` --> See :meth:`Database.__contains__`                                                          |
    |                      | ``    workspace[name] = value`` --> See :meth:`Database.__setitem__`                                                           |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datadelete``       | ``del workspace[name]`` --> See See :meth:`Database.__delitem__`                                                               |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``dataexist``        | ``name in workspace`` --> See :meth:`Database.__contains__`                                                                    |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``dataedit``         | ``workspace[name] = value`` --> See :meth:`Database.__setitem__`                                                               |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``dataupdate``       | ``workspace[name] = value`` --> See :meth:`Database.__setitem__`                                                               |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``dataappend``       | Operator += Not Yet Implemented                                                                                                |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``dataduplicate``    | ``workspace[new_name] = workspace[name]`` --> See :meth:`Database.__setitem__`                                                 |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datarename``       | ``workspace.rename(old_name, new_name)`` --> See :meth:`Database.rename`                                                       |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datasearch``       | ``workspace.search(pattern, word, case_sensitive, in_name, in_formula, in_text, list_result)`` --> See :meth:`Database.search` |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datascan``         | Not Yet Implemented                                                                                                            |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datalistXxx``      | ``names = workspace.get_names(pattern)`` --> See :meth:`Database.get_names`                                                    |
    |                      | ``lists[listname] = names`` --> See :meth:`Database.__setitem__`                                                               |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datalistsort``     | ``lst = split_list(lists[listname]))``   --> See :func:`split_list`                                                            |
    |                      | ``lists[sorted_listname] = sorted(lst)``                                                                                       |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datacompareEps``   | Not Yet Implemented                                                                                                            |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datacompareXxx``   | Not Yet Implemented                                                                                                            |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datacalclst``      | ``list1, list2 = split_list(lists[list1]), split_list(lists[list2])``                                                          |
    |                      | union:        ``list(set(list1) | set(list2))``                                                                                |
    |                      | intersection: ``list(set(list1) & set(list2))``                                                                                |
    |                      | difference:   ``list(set(list1) - set(list2))``                                                                                |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datacalcvar``      | ``variables[varname] = lec_formula`` --> See :meth:`Database.__setitem__`                                                      |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datadisplaygraph`` | ``df = variables.to_frame()`` then see `Chart visualization <https://pandas.pydata.org/docs/user_guide/visualization.html>`_   |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datasavegraph``    | ``df = variables.to_frame()`` then see `Chart visualization <https://pandas.pydata.org/docs/user_guide/visualization.html>`_   |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datawidthvar``     | Not Implemented                                                                                                                |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datandecvar``      | Not Implemented                                                                                                                |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datamodevar``      | ``variables.mode = VAR_MODE_LEVEL`` --> See :meth:`Variables.mode`                                                             |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datastartvar``     | Not Implemented                                                                                                                |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datawidthtbl``     | Not Implemented                                                                                                                |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datawidthscl``     | Not Implemented                                                                                                                |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datandecscl``      | Not Implemented                                                                                                                |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``dataeditcnf``      | Not Implemented                                                                                                                |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datarasvar``       | Not Yet Implemented                                                                                                            |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datapatternXXX``   | Not Yet Implemented                                                                                                            |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+


=========
Equations
=========

    +----------------------+-----------------------------------------------------------------------------------------+
    | IODE Report Commands | Python Equivalent                                                                       |
    +======================+=========================================================================================+
    | ``EqsEstimate``      | ``eqs_estimate(eq_list, from_, to_)`` --> See :func:`eqs_estimate`                      |
    +----------------------+-----------------------------------------------------------------------------------------+
    | ``EqsStepWise``      | Not Yet Implemented                                                                     |
    +----------------------+-----------------------------------------------------------------------------------------+
    | ``EqsSetCmt``        | ``equations[eq_name].comment = "new_comment"`` --> See :meth:`Equation.comment`         |
    +----------------------+-----------------------------------------------------------------------------------------+
    | ``EqsSetSample``     | ``equations[eq_name].sample = "from:to"`` --> See :meth:`Equation.sample`               |
    +----------------------+-----------------------------------------------------------------------------------------+
    | ``EqsSetMethod``     | ``equations[eq_name].method = EQ_METHOD_LSQ`` --> See :meth:`Equation.method`           |
    +----------------------+-----------------------------------------------------------------------------------------+
    | ``EqsSetInstrs``     | ``equations[eq_name].instruments = "instruments"`` --> See :meth:`Equation.instruments` |
    +----------------------+-----------------------------------------------------------------------------------------+
    | ``EqsSetBloc``       | ``equations[eq_name].block = "block"`` --> See :meth:`Equation.block`                   |
    +----------------------+-----------------------------------------------------------------------------------------+

===============
Computed Tables
===============

    +----------------------+-----------------------------------------------------------------------------------------------------------------+
    | IODE Report Commands | Python Equivalent                                                                                               |
    +======================+=================================================================================================================+
    | ``PrintTblFile``     | ``tables[table_name].compute(generalized_sample, extra_files, nb_decimals)`` --> See :meth:`iode.Table.compute` |
    +----------------------+-----------------------------------------------------------------------------------------------------------------+
    | ``PrintTbl``         | ``tables[table_name].compute(generalized_sample, extra_files, nb_decimals)`` --> See :meth:`iode.Table.compute` |
    +----------------------+-----------------------------------------------------------------------------------------------------------------+
    | ``ViewTblFile``      | ``tables[table_name].compute(generalized_sample, extra_files, nb_decimals)`` --> See :meth:`iode.Table.compute` |
    +----------------------+-----------------------------------------------------------------------------------------------------------------+
    | ``ViewTbl``          | ``tables[table_name].compute(generalized_sample, extra_files, nb_decimals)`` --> See :meth:`iode.Table.compute` |
    +----------------------+-----------------------------------------------------------------------------------------------------------------+
    | ``ViewByTbl``        | ``tables[table_name].compute(generalized_sample, extra_files, nb_decimals)`` --> See :meth:`iode.Table.compute` |
    +----------------------+-----------------------------------------------------------------------------------------------------------------+
    | ``PrintVar``         | ``tables[table_name].compute(generalized_sample, extra_files, nb_decimals)`` --> See :meth:`iode.Table.compute` |
    +----------------------+-----------------------------------------------------------------------------------------------------------------+
    | ``ViewVar``          | ``tables[table_name].compute(generalized_sample, extra_files, nb_decimals)`` --> See :meth:`iode.Table.compute` |
    +----------------------+-----------------------------------------------------------------------------------------------------------------+
    | ``ViewWidth``        | Not Implemented                                                                                                 |
    +----------------------+-----------------------------------------------------------------------------------------------------------------+
    | ``ViewWidth0``       | Not Implemented                                                                                                 |
    +----------------------+-----------------------------------------------------------------------------------------------------------------+
    | ``ViewNdec``         | ``tables[table_name].compute(generalized_sample, extra_files, nb_decimals)`` --> See :meth:`iode.Table.compute` |
    +----------------------+-----------------------------------------------------------------------------------------------------------------+

