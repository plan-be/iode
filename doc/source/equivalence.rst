.. _start_equivalence:

.. currentmodule:: iode


#################################################
Equivalence Between IODE Report and Python Syntax
#################################################

.. _report_execution_commands_equivalence:

***********************************************************************
Equivalence Between IODE Report Execution Commands And Python Functions
***********************************************************************

    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | IODE Report Command | Python Equivalent                                                                                                                               |
    +=====================+=================================================================================================================================================+
    | $abort              | `exit() <https://docs.python.org/3/library/sys.html#sys.exit>`_                                                                                 |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $ask                | `input(prompt) <https://docs.python.org/3/library/functions.html#input>`_                                                                       |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $beep               | No equivalent                                                                                                                                   |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $chdir              | `os.chdir(path) <https://docs.python.org/3/library/os.html#os.chdir>`_ [#f1]_                                                                   |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $debug              | To be implemented                                                                                                                               |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $define             | `my_variable = value` --> See `Python Variables <https://docs.python.org/3/tutorial/introduction.html#using-python-as-a-calculator>`_           |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $foreach            | `for item in iterable: ...` --> See `Python For Loops <https://docs.python.org/3/tutorial/controlflow.html#for-statements>`_                    |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $goto               | Python does not support labels and goto                                                                                                         |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $incrtime           | `increment_t(value)` --> See :func:`increment_t`                                                                                                |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $indent             | No equivalent (Python language IS indentation-sensitive)                                                                                        |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $label              | Python does not support labels and goto                                                                                                         |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $maximize           | No longer maintained                                                                                                                            |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $minimize           | No longer maintained                                                                                                                            |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $mkdir              | `os.mkdir(path) <https://docs.python.org/3/library/os.html#os.mkdir>`_ [#f1]_                                                                   |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $multiline          | use the backslash `\` at the end of the line to continue on the next line                                                                       |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $msg                | `print(message) <https://docs.python.org/3/library/functions.html#print>`_                                                                      |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $next               | No equivalent                                                                                                                                   |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $noparsing          | No equivalent (Python does not have a parsing phase like IODE)                                                                                  |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $procdef            | `def function_name(parameters): ...` --> See `Python Functions <https://docs.python.org/3/tutorial/controlflow.html#defining-functions>`_       |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $procend            | No equivalent (simply stop indent to end the function definition)                                                                               |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $procexec           | `function_name(arguments)` --> See `Python Function Calls <https://docs.python.org/3/tutorial/controlflow.html#defining-functions>`_            |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $onerror            | `try: ... except Exception as e: ...` --> See `Python Exception Handling <https://docs.python.org/3/tutorial/errors.html#handling-exceptions>`_ |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $prompt             | `input(prompt) <https://docs.python.org/3/library/functions.html#input>`_                                                                       |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $quit               | `exit() <https://docs.python.org/3/library/sys.html#sys.exit>`_                                                                                 |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $quitode            | No longer maintained                                                                                                                            |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $repeat             | ``for arg in arguments:``                                                                                                                       |
    |                     | ``    command(arg)     ``                                                                                                                       |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $repeatstring       | No equivalent                                                                                                                                   |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $return             | `return value` --> See `Python Return Statement <https://docs.python.org/3/tutorial/controlflow.html#defining-functions>`_                      |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $rmdir              | `os.rmdir(path) <https://docs.python.org/3/library/os.rmdir>`_ [#f1]_                                                                           |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $settime            | `set_t(value)` --> See :func:`set_t`                                                                                                            |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $shift              | No equivalent                                                                                                                                   |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $show               | `print(variable) <https://docs.python.org/3/library/functions.html#print>`_                                                                     |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $sleep              | `time.sleep(seconds) <https://docs.python.org/3/library/time.html#time.sleep>`_ [#f2]_                                                          |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $system             | `os.system(command) <https://docs.python.org/3/library/os.html#os.system>`_ [#f1]_                                                              |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
    | $vseps              | `text.split(separators) <https://docs.python.org/3/library/stdtypes.html#str.split>`_                                                           |
    +---------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+

.. _report_funcs_equivalence:

****************************************************
Equivalence Between IODE Report And Python Functions
****************************************************

   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | IODE Report Functions                | Python Equivalent                                                                                                                   |            
   +======================================+=====================================================================================================================================+
   | ``@upper(txt)``                      | `txt.upper() <https://docs.python.org/3/library/stdtypes.html#str.upper>`_                                                          |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@lower(txt)``                      | `txt.lower() <https://docs.python.org/3/library/stdtypes.html#str.lower>`_                                                          |             
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@replace(txt, from, to)``          | `txt.replace(old, new) <https://docs.python.org/3/library/stdtypes.html#str.replace>`_                                              |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@fmt(val, fmt)``                   | See `printf-style String Formatting <https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting>`_              |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@take(n, txt)``                    | `txt[:n] <https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range>`_                                        |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@drop(n, txt)``                    | `txt[n:] <https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range>`_                                        |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@count(txt)``                      | `len(txt.split(',')) <https://docs.python.org/3/library/stdtypes.html#str.split>`_                                                  |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@index(n, list_txt)``              | `split_list(list_txt)[n-1] <https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range>`_                      |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@sqz(txt)``                        | `txt.replace(' ', '') <https://docs.python.org/3/library/stdtypes.html#str.replace>`_                                               |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@strip(txt)``                      | `txt.strip() <https://docs.python.org/3/library/stdtypes.html#str.strip>`_                                                          |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@ansi(txt)``                       | See `String Methods <https://docs.python.org/3/library/stdtypes.html#string-methods>`_                                              |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@equal(t1, t2)``                   | `t1 == t2` --> See `Python Comparisons <https://docs.python.org/3/library/stdtypes.html#comparisons>`_                              |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@void(t1, ...)``                   | No equivalence                                                                                                                      |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@vtake(n, list_txt)``              | `list_txt.split(separators)[:n] <https://docs.python.org/3/library/stdtypes.html#str.split>`_                                       |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@vdrop(n, list_txt)``              | `list_txt.split(separators)[n:] <https://docs.python.org/3/library/stdtypes.html#str.split>`_                                       |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@vcount(list_txt)``                | `len(list_txt.split(separators)) <https://docs.python.org/3/library/stdtypes.html#str.split>`_                                      |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@fdelete(filepath)``               | `Path(filepath).unlink() <https://docs.python.org/3/library/pathlib.html#pathlib.Path.unlink>`_                                     |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@fappend(filepath, txt)``          | `with open(filepath, 'a') as f: f.write(txt) <https://docs.python.org/3/library/functions.html#open>`_                              |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@getdir()``                        | `os.getcwd() <https://docs.python.org/3/library/os.html#os.getcwd>`_                                                                |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@chdir(dirname)``                  | `os.chdir(dirname) <https://docs.python.org/3/library/os.html#os.chdir>`_ [#f1]_                                                    |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@mkdir(dirname)``                  | `os.mkdir(dirname) <https://docs.python.org/3/library/os.html#os.mkdir>`_ [#f1]_                                                    |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@rmdir(dirname)``                  | `os.rmdir(dirname) <https://docs.python.org/3/library/os.html#os.rmdir>`_ [#f1]_                                                    |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@date(format)``                    | `datetime.now().strftime("%d/%m/%Y") <https://docs.python.org/3/library/datetime.html#datetime.datetime.now>`_ [#f2]_               |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@time(format)``                    | `datetime.now().strftime("%H:%M:%S") <https://docs.python.org/3/library/datetime.html#datetime.datetime.now>`_ [#f2]_               |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@month(month, language)``          | `datetime.date(year, month, day).strftime("%B") <https://docs.python.org/3.9/library/datetime.html#strftime-and-strptime-behavior>`_|
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@ChronoReset()``                   | `start = time.time_ns() <https://docs.python.org/3/library/time.html#time.time_ns>`_ [#f3]_                                         |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@ChronoGet()``                     | `elapsed_time = time.time_ns() - start <https://docs.python.org/3/library/time.html#time.time_ns>`_ [#f3]_                          |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@cexpand(pattern)``                | ``comments.get_names(pattern)`` --> See :meth:`Database.get_names` and :meth:`Database.names`                                       |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@eexpand(pattern)``                | ``equations.get_names(pattern)`` --> See :meth:`Database.get_names` and :meth:`Database.names`                                      |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@iexpand(pattern)``                | ``identities.get_names(pattern)`` --> See :meth:`Database.get_names` and :meth:`Database.names`                                     |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@lexpand(pattern)``                | ``lists.get_names(pattern)`` --> See :meth:`Database.get_names` and :meth:`Database.names`                                          |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@sexpand(pattern)``                | ``scalars.get_names(pattern)`` --> See :meth:`Database.get_names` and :meth:`Database.names`                                        |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@texpand(pattern)``                | ``tables.get_names(pattern)`` --> See :meth:`Database.get_names` and :meth:`Database.names`                                         |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@vexpand(pattern)``                | ``variables.get_names(pattern)`` --> See :meth:`Database.get_names` and :meth:`Database.names`                                      |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@vliste(eq_name)``                 | ``equations[eq_name].get_variables_list()`` --> See :meth:`Equation.get_variables_list`                                             |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@sliste(eq_name)``                 | ``equations[eq_name].get_coefficients_list()`` --> See :meth:`Equation.get_coefficients_list`                                       |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@ttitle(table_name)``              | ``Tables[table_name].title`` --> See :meth:`Table.title`                                                                            |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@srelax(scl_name)``                | `scalars[scl_name].relax` --> See :meth:`Scalar.relax`                                                                              |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@sstderr(scl_name)``               | `scalars[scl_name].std` --> See :meth:`Scalar.std`                                                                                  |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@cvalue(cmt_names)``               | `[comments[name] for name in cmt_names]` --> See :meth:`Database.__getitem__`                                                       |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@vvalue(var_names)``               | `[variables[name] for name in var_names]` --> See :meth:`Database.__getitem__`                                                      |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@sample()``                        | `variables.sample` --> See :meth:`Variables.sample`                                                                                 |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@evalue(eq_name)``                 | `equations[eq_name].lec` --> See :meth:`Equation.lec`                                                                               |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@eqsample(eq_name)``               | `equations[eq_name].sample` --> See :meth:`Equation.sample`                                                                         |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@eqsamplefrom(eq_name)``           | `equations[eq_name].sample.start` --> See :meth:`Equation.sample` and :meth:`Sample.start`                                          |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@eqsampleto(eq_name)``             | `equations[eq_name].sample.end` --> See :meth:`Equation.sample` adnd :meth:`Sample.end`                                             |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@eqlhs(eq_name)``                  | ``lhs, rhs = equations[eq_name].split_equation()`` --> See :meth:`Equation.split_equation`                                          |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@eqrhs(eq_name)``                  | ``lhs, rhs = equations[eq_name].split_equation()`` --> See :meth:`Equation.split_equation`                                          |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SqlOpen``                         | No longer maintained                                                                                                                |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SqlQuery``                        | No longer maintained                                                                                                                |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SqlNext``                         | No longer maintained                                                                                                                |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SqlField``                        | No longer maintained                                                                                                                |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SqlRecord``                       | No longer maintained                                                                                                                |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SqlClose``                        | No longer maintained                                                                                                                |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SimEps()``                        | ``simu.convergence_threshold`` --> See :meth:`Simulation.convergence_threshold`                                                     |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SimRelax()``                      | ``simu.relax`` --> See :meth:`Simulation.relax`                                                                                     |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SimMaxit()``                      | ``simu.max_nb_iterations`` --> See :meth:`Simulation.max_nb_iterations`                                                             |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SimNiter(period)``                | ``simu.nb_iterations(period)`` --> See :meth:`Simulation.nb_iterations`                                                             |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``@SimNorm(period)``                 | ``simu.norm(period)`` --> See :meth:`Simulation.norm`                                                                               |
   +--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------+

.. [#f1] Assuming module ``os`` is imported.
.. [#f2] Assuming module ``datetime`` is imported.
.. [#f3] Assuming module ``time`` is imported.


.. _report_commands_equivalence:

***********************************************************
Equivalence Between IODE Report Commands and Python Methods
***********************************************************

==========
Workspaces
==========

Below *workspace* must be replaced by either:
  - comments
  - equations
  - identities
  - lists
  - scalars
  - tables
  - variables

    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | IODE Report Commands | Python Equivalent                                                                                                   |
    +======================+=====================================================================================================================+
    | ``WsLoad``           | ``workspace.load(filepath)`` --> See :meth:`Database.load`                                                          |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsCopy``           | ``workspace.copy_into(filepath)`` --> See :meth:`Database.copy_into`                                                |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsMerge``          | ``workspace.merge_from(filepath)`` --> See :meth:`Database.merge_from`                                              |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsClear``          | ``workspace.clear()`` --> See :meth:`Database.clear`                                                                |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsClearAll``       | ``execute_command("$WsClearAll")`` --> See :func:`execute_command`                                                  |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsDescr``          | ``workspace.description`` --> See :meth:`Database.description`                                                      |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsSave``           | ``workspace.save(filepath)`` --> See :meth:`Database.save`                                                          |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsSaveCmp``        | ``workspace.save(filepath, True)`` --> See :meth:`Database.save`                                                    |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsSample``         | ``variables.sample = "1990Y1:2050Y1"`` --> See :meth:`Variables.sample`                                             |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsExtrapolate``    | ``variables.extrapolate(method, from_, to_, variables_list)`` --> See :meth:`Variables.extrapolate`                 |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsLtohStock``      | ``variables.low_to_high(LTOH_STOCK, method, filepath, var_list)`` --> See :meth:`Variables.low_to_high`             |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsLtohFlow``       | ``variables.low_to_high(LTOH_FLOW, method, filepath, var_list)`` --> See :meth:`Variables.low_to_high`              |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsHtolSum``        | ``variables.high_to_low(HTOL_SUM, filepath, var_list)`` --> See :meth:`Variables.high_to_low`                       |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsHtolMean``       | ``variables.high_to_low(HTOL_MEAN, filepath, var_list)`` --> See :meth:`Variables.high_to_low`                      |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsHtolLast``       | ``variables.high_to_low(HTOL_LAST, filepath, var_list)`` --> See :meth:`Variables.high_to_low`                      |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsSeasonAdj``      | ``variables.seasonal_adjustment(input_file, eps_test, series)`` --> See :meth:`Variables.seasonal_adjustment`       |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsSeasAdj``        | ``variables.seasonal_adjustment(input_file, eps_test, series)`` --> See :meth:`Variables.seasonal_adjustment`       |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsTrend``          | ``variables.trend_correction(input_file, lambda_, series, log=True)`` --> See :meth:`Variables.trend_correction`    |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsTrendStd``       | ``variables.trend_correction(input_file, lambda_, series, log=False)`` --> See :meth:`Variables.trend_correction`   |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsImport``         | ``workspace.load(filepath)`` --> See :meth:`Database.load`                                                          |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsExport``         | ``workspace.save(filepath)`` --> See :meth:`Database.save`                                                          |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``WsImportEviews``   | ``execute_command("$WsImportEviews")`` --> See :func:`execute_command`                                              |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``CsvSave``          | ``df = workspace.to_frame()`` --> See :meth:`iode.Variables.to_frame`                                               |
    |                      | `df.to_csv(filepath, ...) <https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_csv.html>`_  [#f4]_     |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``CsvDigits``        | ``df = workspace.to_frame()`` --> See :meth:`iode.Variables.to_frame`                                               |
    |                      | `df.to_csv(filepath, ...) <https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_csv.html>`_  [#f4]_     |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``CsvSep``           | ``df = workspace.to_frame()`` --> See :meth:`iode.Variables.to_frame`                                               |
    |                      | `ndf.to_csv(filepath, ...) <https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_csv.html>`_  [#f4]_    |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``CsvDec``           | ``df = workspace.to_frame()`` --> See :meth:`iode.Variables.to_frame`                                               |
    |                      | `ndf.to_csv(filepath, ...) <https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_csv.html>`_  [#f4]_    |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``CsvNaN``           | ``df = workspace.to_frame()`` --> See :meth:`iode.Variables.to_frame`                                               |
    |                      | `df.to_csv(filepath, ...) <https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_csv.html>`_  [#f4]_     |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+
    | ``CsvAxes``          | ``df = workspace.to_frame()`` --> See :meth:`iode.Variables.to_frame`                                               |
    |                      | `df.to_csv(filepath, ...) <https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_csv.html>`_  [#f4]_     |
    +----------------------+---------------------------------------------------------------------------------------------------------------------+

.. [#f4] Assuming library ``pandas`` is installed.


====
Data
====

Below *workspace* must be replaced by either:
  - comments
  - equations
  - identities
  - lists
  - scalars
  - tables
  - variables


    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | IODE Report Commands | Python Equivalent                                                                                                              |
    +======================+================================================================================================================================+
    | ``datacreate``       | ``if name not in workspace:  `` --> See :meth:`Database.__contains__`                                                          |
    |                      | ``    workspace[name] = value`` --> See :meth:`Database.__setitem__`                                                           |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datadelete``       | ``del workspace[name]`` --> See See :meth:`Database.__delitem__`                                                               |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``dataexist``        | ``name in workspace`` --> See :meth:`Database.__contains__`                                                                    |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``dataedit``         | ``workspace[name] = value`` --> See :meth:`Database.__setitem__`                                                               |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``dataupdate``       | ``workspace[name] = value`` --> See :meth:`Database.__setitem__`                                                               |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``dataappend``       | ``workspace[new_name] = value`` --> See :meth:`Database.__setitem__`                                                           |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``dataduplicate``    | ``workspace[new_name] = workspace[name]`` --> See :meth:`Database.__setitem__`                                                 |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datarename``       | ``workspace.rename(old_name, new_name)`` --> See :meth:`Database.rename`                                                       |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datasearch``       | ``workspace.search(pattern, word, case_sensitive, in_name, in_formula, in_text, list_result)`` --> See :meth:`Database.search` |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datascan``         | ``(equations|identities|tables)[pattern].coefficients`` --> See :meth:`Equations.coefficients`                                 |
    |                      | ``(equations|identities|tables)[pattern].variables``    --> See :meth:`Equations.variables`                                    |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datalistXxx``      | ``names = workspace.get_names(pattern)`` --> See :meth:`Database.get_names` and :meth:`Database.names``                        |
    |                      | ``names = workspace.get_names(pattern, filepath)``                                                                             |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datalistsort``     | ``lists[list_name] = sorted(lists[list_name])``                                                                                |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datalistcount``    | ``len(lists[list_name])``                                                                                                      |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datacompareEps``   | ``variables.threshold = value`` --> See :meth:`Variables.threshold`                                                            |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datacompareXxx``   | ``workspace.compare(filepath, only_in_workspace_list_name, only_in_file_list_name, `` --> See :meth:`Database.compare`         | 
    |                      | ``                  equal_objects_list_name, different_objects_list_name)``                                                    |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datacalclst``      | ``list1, list2 = lists[name_1], lists[name_2]``                                                                                |
    |                      | union:        ``list(set(list1) | set(list2))``                                                                                |
    |                      | intersection: ``list(set(list1) & set(list2))``                                                                                |
    |                      | difference:   ``list(set(list1) - set(list2))``                                                                                |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datacalcvar``      | ``variables[varname] = lec_formula`` --> See :meth:`Database.__setitem__`                                                      |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datadisplaygraph`` | ``df = variables.to_frame()`` then see `Chart visualization <https://pandas.pydata.org/docs/user_guide/visualization.html>`_   |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datasavegraph``    | ``df = variables.to_frame()`` then see `Chart visualization <https://pandas.pydata.org/docs/user_guide/visualization.html>`_   |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datawidthvar``     | Managed in the graphical user interface                                                                                        |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datandecvar``      | Managed in the graphical user interface                                                                                        |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datamodevar``      | ``variables.mode = VAR_MODE_LEVEL`` --> See :meth:`Variables.mode`                                                             |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datastartvar``     | Managed in the graphical user interface                                                                                        |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datawidthtbl``     | Managed in the graphical user interface                                                                                        |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datawidthscl``     | Managed in the graphical user interface                                                                                        |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datandecscl``      | Managed in the graphical user interface                                                                                        |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``dataeditcnf``      | Managed in the graphical user interface                                                                                        |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datarasvar``       | ``variables.execute_RAS(pattern, xdim, ydim, ref_year, sum_year, maxit, epsilon)`` --> See :meth:`Variables.execute_RAS`       |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+
    | ``datapatternXXX``   | ``workspace.get_names_from_pattern(list_name, pattern, xdim, ydim)`` --> See :meth:`Database.get_names_from_pattern`           |
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------+

=========
Equations
=========

    +----------------------+-------------------------------------------------------------------------------------------------------------------------------------+
    | IODE Report Commands | Python Equivalent                                                                                                                   |
    +======================+=====================================================================================================================================+
    | ``EqsEstimate``      | ``equations.estimate(from_period, to_period, list_eqs)`` --> See :meth:`Equations.estimate`                                         |
    |                      | or ``equations[name].estimate(from_period, to_period)`` --> See :meth:`Equation.estimate`                                           |
    +----------------------+-------------------------------------------------------------------------------------------------------------------------------------+
    | ``EqsStepWise``      | ``equations[eq_name].estimate_step_wise(from_period, to_period, lec_condition, test)`` --> See :meth:`Equations.estimate_step_wise` |
    +----------------------+-------------------------------------------------------------------------------------------------------------------------------------+
    | ``EqsSetCmt``        | ``equations[eq_name].comment = "new_comment"`` --> See :meth:`Equation.comment`                                                     |
    +----------------------+-------------------------------------------------------------------------------------------------------------------------------------+
    | ``EqsSetSample``     | ``equations[eq_name].sample = "from:to"`` --> See :meth:`Equation.sample`                                                           |
    +----------------------+-------------------------------------------------------------------------------------------------------------------------------------+
    | ``EqsSetMethod``     | ``equations[eq_name].method = EQ_METHOD_LSQ`` --> See :meth:`Equation.method`                                                       |
    +----------------------+-------------------------------------------------------------------------------------------------------------------------------------+
    | ``EqsSetInstrs``     | ``equations[eq_name].instruments = "instruments"`` --> See :meth:`Equation.instruments`                                             |
    +----------------------+-------------------------------------------------------------------------------------------------------------------------------------+
    | ``EqsSetBloc``       | ``equations[eq_name].block = "block"`` --> See :meth:`Equation.block`                                                               |
    +----------------------+-------------------------------------------------------------------------------------------------------------------------------------+

===============
Computed Tables
===============

    +----------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
    | IODE Report Commands | Python Equivalent                                                                                                                            |
    +======================+==============================================================================================================================================+
    | ``PrintTblFile``     | ``tables.print_tables_as = "COMPUTED"`` --> See :meth:`Tables.print_tables_as`                                                               | 
    |                      | ``tables.print_to_file(destination_file, names, generalized_sample, nb_decimals)`` --> See :meth:`iode.Tables.print_to_file`                 | 
    +----------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
    | ``PrintTbl``         | ``computed_table = tables[table_name].compute(generalized_sample, extra_files, nb_decimals)`` --> See :meth:`iode.Table.compute`             |
    |                      | ``computed_table.print_to_file(destination_file, format)`` --> See :meth:`iode.ComputedTable.print_to_file`                                  |
    +----------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
    | ``ViewTblFile``      | ``load_extra_files(list_of_files)`` --> See :func:`iode.load_extra_files`                                                                    |
    +----------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
    | ``ViewTbl``          | ``computed_table = table.compute(generalized_sample, extra_files, nb_decimals)`` --> See :meth:`iode.Table.compute`                          |
    +----------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
    | ``ViewByTbl``        | alias of ``ViewTbl`` (line above)                                                                                                            |
    +----------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
    | ``PrintVar``         | ``table = Table(2, title, list_of_variables)`` --> See :class:`iode.Table`                                                                   |
    |                      | ``computed_table = tables[table_name].compute(generalized_sample, extra_files, nb_decimals)`` --> See :meth:`iode.Table.compute`             |
    |                      | ``computed_table.print_to_file(destination_file, format)`` --> See :meth:`iode.ComputedTable.print_to_file`                                  |
    +----------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
    | ``ViewVar``          | ``table = Table(2, title, list_of_variables)`` --> See :class:`iode.Table`                                                                   |
    |                      | ``computed_table = table.compute(generalized_sample, extra_files, nb_decimals)`` --> See :meth:`iode.Table.compute`                          |
    +----------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
    | ``ViewWidth``        | Managed in the graphical user interface                                                                                                      |
    +----------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
    | ``ViewWidth0``       | Managed in the graphical user interface                                                                                                      |
    +----------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
    | ``ViewNdec``         | ``computed_table = tables[table_name].compute(generalized_sample, extra_files, nb_decimals)`` --> See :meth:`iode.Table.compute`             |
    +----------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
    | ``ViewGr``           | ``computed_table = tables[table_name].compute(generalized_sample, extra_files, nb_decimals)`` --> See :meth:`iode.Table.compute`             | 
    |                      | ``computed_table.plot(title, plot_type, ...)`` --> See :meth:`iode.ComputedTable.plot`                                                       |
    +----------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
    | ``PrintGr``          | No longer maintained: use ``computed_table.print_to_file(destination_file, format)`` instead --> See :meth:`iode.ComputedTable.print_to_file`|
    +----------------------+----------------------------------------------------------------------------------------------------------------------------------------------+

======
Models
======

    +-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
    | IODE Report Commands        | Python Equivalent                                                                                                                          |
    +=============================+============================================================================================================================================+
    | ``ModelCalcSCC``            | ``simu.model_calculate_SCC(nb_iterations, pre_name, inter_name, post_name, list_eqs)`` --> See :meth:`Simulation.model_calculate_SCC`      |
    +-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
    | ``ModelSimulateParms``      | ``simu = Simulation(convergence_threshold, relax, max_nb_iterations, sort_algorithm, ``                                                    |
    |                             | ``                  initialization_method, debug, nb_passes, debug_newton)``  --> See :meth:`Simulation`                                   |
    +-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
    | ``ModelSimulate``           | ``simu.model_simulate(from_period, to_period, list_eqs)`` --> See :meth:`Simulation.model_simulate`                                        |
    +-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
    | ``ModelSimulateSCC``        | ``simu.model_simulate_SCC(from_period, to_period, pre_name, inter_name, post_name)`` --> See :meth:`Simulation.model_simulate_SCC`         |
    +-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
    | ``ModelExchange``           | ``simu.model_exchange(list_exo)`` --> See :meth:`Simulation.model_exchange`                                                                |
    +-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
    | ``ModelCompile``            | ``simu.model_compile(list_eqs)`` --> See :meth:`Simulation.model_compile`                                                                  |
    +-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
    | ``ModelSimulateSaveNiters`` | ``simu.save_nb_iterations("NB_ITER")`` --> See :meth:`Simulation.save_nb_iterations`                                                       |
    +-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
    | ``ModelSimulateSaveNorms``  | ``simu.save_norms("SIMU_NORM")`` --> See :meth:`Simulation.save_norms`                                                                     |
    +-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+

==================
Execute Identities 
==================

    +----------------------+-------------------------------------------------------------------------------------------------------------------------------+
    | IODE Report Commands | Python Equivalent                                                                                                             |
    +======================+===============================================================================================================================+
    | `idtexecute`         | ``identities.execute(identities, from_period, to_period, var_files, scalar_files, trace)`` --> See :meth:`Identities.execute` | 
    +----------------------+-------------------------------------------------------------------------------------------------------------------------------+
    | `idtexecutetrace`    | ``identities.execute(identities, from_period, to_period, var_files, scalar_files, trace)`` --> See :meth:`Identities.execute` |
    +----------------------+-------------------------------------------------------------------------------------------------------------------------------+
    | `idtexecutevarfiles` | ``identities.execute(identities, from_period, to_period, var_files, scalar_files, trace)`` --> See :meth:`Identities.execute` |
    +----------------------+-------------------------------------------------------------------------------------------------------------------------------+
    | `idtexecutesclfiles` | ``identities.execute(identities, from_period, to_period, var_files, scalar_files, trace)`` --> See :meth:`Identities.execute` |
    +----------------------+-------------------------------------------------------------------------------------------------------------------------------+

=======
Reports
=======

    +----------------------+-------------------------------------------------------------------------+
    | IODE Report Commands | Python Equivalent                                                       |
    +======================+=========================================================================+
    | `ReportExec`         | ``execute_report(filepath, parameters)`` --> See :func:`execute_report` | 
    +----------------------+-------------------------------------------------------------------------+

==================
Print IODE Objects
==================

    +----------------------+--------------------------------------------------------------------------------------------------+
    | IODE Report Commands | Python Equivalent                                                                                |
    +======================+==================================================================================================+
    | `PrintNbDec`         | ``equations.print_nb_decimals = value`` --> See See :meth:`Equations.print_nb_decimals`          | 
    |                      | ``scalars.print_nb_decimals = value`` --> See See :meth:`Scalars.print_nb_decimals`              | 
    |                      | ``tables.print_nb_decimals = value`` --> See See :meth:`Tables.print_nb_decimals`                | 
    +----------------------+--------------------------------------------------------------------------------------------------+
    | `PrintObjTitle`      | ``tables.print_tables_as = enum`` --> See See :meth:`Tables.print_tables_as`                     | 
    +----------------------+--------------------------------------------------------------------------------------------------+
    | `PrintObjInfos`      | ``equations.print_equations_as = enum`` --> See See :meth:`Equations.print_equations_as`         | 
    +----------------------+--------------------------------------------------------------------------------------------------+
    | `PrintObjLec`        | ``equations.print_equations_lec_as = enum`` --> See See :meth:`Equations.print_equations_lec_as` | 
    +----------------------+--------------------------------------------------------------------------------------------------+
    | `PrintObjDefXxx`     | ``workspace.print_to_file(filepath, names)`` --> See See :meth:`Comments.print_to_file`          | 
    +----------------------+--------------------------------------------------------------------------------------------------+

=============
Miscellaneous 
=============

    +----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
    | IODE Report Commands | Python Equivalent                                                                                                                                      |
    +======================+========================================================================================================================================================+
    | `StatUnitRoot`       | ``dickey_fuller_test(lec, drift, trend, order)`` --> See :func:`dickey_fuller_test`                                                                    | 
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
    | `FileImportCmt`      | ``comments.convert_file(input_file, input_format, save_file, rule_file, debug_file)`` --> See :meth:`Comments.convert_file`                            | 
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
    | `FileImportVar`      | ``variables.convert_file(input_file, input_format, save_file, rule_file, from_period, to_period, debug_file)`` --> See :meth:`Variables.convert_file`  | 
    +----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
