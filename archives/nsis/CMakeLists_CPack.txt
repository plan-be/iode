# cpack must bu run from ${CMAKE_BINARY_DIR}

set(CPACK_GENERATOR "NSIS")

# -- CPACK DIRECTIVES --
set(CPACK_PACKAGE_NAME ${CMAKE_PROJECT_NAME})
set(CPACK_PACKAGE_VERSION_MAJOR ${IODE_MAJOR_VERSION})
set(CPACK_PACKAGE_VERSION_MINOR ${IODE_MINOR_VERSION})
set(CPACK_PACKAGE_VERSION "${IODE_MAJOR_VERSION}.${IODE_MINOR_VERSION}")
set(CPACK_PACKAGE_VERSION_PATCH "0")
set(CPACK_PACKAGE_VENDOR ${IODE_COMPANY})
# set(CPACK_RESOURCE_FILE_LICENSE ${CMAKE_SOURCE_DIR}/LICENSE.txt)

set(CPACK_SOURCE_GENERATOR "ZIP;TGZ")

# The full directory presented to the end user is: ${CPACK_NSIS_INSTALL_ROOT}/${CPACK_PACKAGE_INSTALL_DIRECTORY}
set(CPACK_PACKAGE_INSTALL_DIRECTORY ${CMAKE_PROJECT_NAME})

# Load packaging facilities.
# - DOC: https://cmake.org/cmake/help/latest/module/CPack.html 
# - The CPack module generates the configuration files CPackConfig.cmake and CPackSourceConfig.cmake. 
#   They are intended for use in a subsequent run of the cpack program where they steer the generation 
#   of installers or/and source packages.
# - Depending on the CMake generator, the CPack module may also add two new build targets, package and package_source.
# - The generated binary installers will contain all files that have been installed via CMake's install() command.
#   Note that the DESTINATION option of the install() command must be a relative path; otherwise installed 
#   files are ignored by CPack.
# - Source packages (configured through CPackSourceConfig.cmake and generated by the CPack Archive Generator) 
#   will contain all source files in the project directory except those specified in CPACK_SOURCE_IGNORE_FILES.
include(CPack)

# -- NSIS DIRECTIVES --
# DOC: https://cmake.org/cmake/help/latest/cpack_gen/nsis.html 
#      https://cmake.org/cmake/help/book/mastering-cmake/chapter/Packaging%20With%20CPack.html#cpack-for-windows-installer-nsis 
# CPack uses configured template files to control NSIS. 
# There are two files configured by CPack during the creation of a NSIS installer. 
# Both files are found in the CMake Modules directory. 
# Modules/NSIS.template.in is the template for the NSIS script, and Modules/NSIS.InstallOptions.ini.in 
# is the template for the modern user interface or MUI used by NSIS. 
# The install options file contains the information about the pages used in the install wizard.
set(CPACK_NSIS_PACKAGE_NAME ${CMAKE_PROJECT_NAME})
set(CPACK_NSIS_DISPLAY_NAME "${CMAKE_PROJECT_NAME} Installer")
set(CPACK_NSIS_EXECUTABLES_DIRECTORY ".")
set(CPACK_NSIS_MUI_ICON "${IODE_RESOUCES_DIR}/iode_icon.ico")
set(CPACK_NSIS_MUI_UNIICON "${IODE_RESOUCES_DIR}/iode_icon.ico")
set(CPACK_NSIS_INSTALLED_ICON_NAME "iode_icon.ico")
set(CPACK_NSIS_HELP_LINK ${PROJECT_HOMEPAGE_URL})
set(CPACK_NSIS_MENU_LINKS ${PROJECT_HOMEPAGE_URL} "${CMAKE_PROJECT_NAME} website")
set(CPACK_NSIS_CONTACT ${IODE_EMAIL})
set(CPACK_NSIS_COMPRESSOR /SOLID /FINAL lzma)
set(CPACK_NSIS_BRANDING_TEXT "${CMAKE_PROJECT_NAME} ${CMAKE_PROJECT_VERSION}")
# If this is set to ON, then an extra page will appear in the installer that will allow the user 
# to choose whether the program directory should be added to the system PATH variable.
set(CPACK_NSIS_MODIFY_PATH ON)

# CPACK_NSIS_INSTALL_ROOT
# The default installation directory presented to the end user by the NSIS installer is under this root dir. 
# The full directory presented to the end user is: ${CPACK_NSIS_INSTALL_ROOT}/${CPACK_PACKAGE_INSTALL_DIRECTORY}
message(STATUS "NSIS INSTALL DIR: ${CPACK_NSIS_INSTALL_ROOT}/${CPACK_PACKAGE_INSTALL_DIRECTORY}")

# Pattern of files in the source tree that won't be packaged when building a source package. 
# This is a list of regular expression patterns (that must be properly escaped), e.g., /CVS/;/\\.svn/;\\.swp$;\\.#;/#;.*~;cscope.*
message(STATUS "CPACK_SOURCE_IGNORE_FILES: ${CPACK_SOURCE_IGNORE_FILES}")
